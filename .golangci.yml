linters:
  # Disable all linters.
  # Default: false
  # disable-all: true
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - decorder
    # - depguard
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - err113
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - exhaustruct
    - exportloopref
    - fatcontext
    # - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - gosmopolitan
    - govet
    - grouper
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - intrange
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - mnd
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagalign
    - tagliatelle
    - tenv
    - testableexamples
    - testifylint
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
    - zerologlint
  # Enable all available linters.
  # Default: false
  # enable-all: true
  # Disable specific linter
  # https://golangci-lint.run/usage/linters/#disabled-by-default
  disable:
    # - asasalint
    # - asciicheck
    # - bidichk
    # - bodyclose
    # - canonicalheader
    # - containedctx
    # - contextcheck
    # - copyloopvar
    # - cyclop
    # - decorder
    # - depguard
    # - dogsled
    # - dupl
    # - dupword
    # - durationcheck
    # - err113
    # - errcheck
    # - errchkjson
    # - errname
    # - errorlint
    # - execinquery
    # - exhaustive
    # - exhaustruct
    # - exportloopref
    # - fatcontext
    # - forbidigo
    # - forcetypeassert
    # - funlen
    # - gci
    # - ginkgolinter
    # - gocheckcompilerdirectives
    # - gochecknoglobals
    # - gochecknoinits
    # - gochecksumtype
    # - gocognit
    # - goconst
    # - gocritic
    # - gocyclo
    # - godot
    # - godox
    # - gofmt
    # - gofumpt
    # - goheader
    # - goimports
    # - gomoddirectives
    # - gomodguard
    # - goprintffuncname
    # - gosec
    # - gosimple
    # - gosmopolitan
    # - govet
    # - grouper
    # - importas
    # - inamedparam
    # - ineffassign
    # - interfacebloat
    # - intrange
    # - ireturn
    # - lll
    # - loggercheck
    # - maintidx
    # - makezero
    # - mirror
    # - misspell
    # - mnd
    # - musttag
    # - nakedret
    # - nestif
    # - nilerr
    # - nilnil
    # - nlreturn
    # - noctx
    # - nolintlint
    # - nonamedreturns
    # - nosprintfhostport
    # - paralleltest
    # - perfsprint
    # - prealloc
    # - predeclared
    # - promlinter
    # - protogetter
    # - reassign
    # - revive
    # - rowserrcheck
    # - sloglint
    # - spancheck
    # - sqlclosecheck
    # - staticcheck
    # - stylecheck
    # - tagalign
    # - tagliatelle
    # - tenv
    # - testableexamples
    # - testifylint
    # - testpackage
    # - thelper
    # - tparallel
    # - typecheck
    # - unconvert
    # - unparam
    # - unused
    # - usestdlibvars
    # - varnamelen
    # - wastedassign
    # - whitespace
    # - wrapcheck
    # - wsl
    # - zerologlint
    # - deadcode # Deprecated
    # - exhaustivestruct # Deprecated
    # - golint # Deprecated
    # - ifshort # Deprecated
    # - interfacer # Deprecated
    # - maligned # Deprecated
    # - gomnd # Deprecated
    # - nosnakecase # Deprecated
    # - scopelint # Deprecated
    # - structcheck # Deprecated
    # - varcheck # Deprecated
  # Enable presets.
  # https://golangci-lint.run/usage/linters
  # Default: []
  presets:
    - bugs
    - comment
    - complexity
    - error
    - format
    - import
    - metalinter
    - module
    - performance
    - sql
    - style
    - test
    - unused
  # Enable only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  fast: true
  # output configuration options
output:
  # The formats used to render issues.
  # Formats:
  # - `colored-line-number`
  # - `line-number`
  # - `json`
  # - `colored-tab`
  # - `tab`
  # - `html`
  # - `checkstyle`
  # - `code-climate`
  # - `junit-xml`
  # - `github-actions`
  # - `teamcity`
  # - `sarif`
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  #
  # For the CLI flag (`--out-format`), multiple formats can be specified by separating them by comma.
  # The output can be specified for each of them by separating format name and path by colon symbol.
  # Example: "--out-format=checkstyle:report.xml,json:stdout,colored-line-number"
  # The CLI flag (`--out-format`) override the configuration file.
  #
  # Default:
  #   formats:
  #     - format: colored-line-number
  #       path: stdout
  formats:
    - format: json
      path: stderr
    - format: checkstyle
      path: report.xml
    - format: colored-line-number
  # Print lines of code with issue.
  # Default: true
  print-issued-lines: false
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: false
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false
  # Add a prefix to the output file references.
  # Default: ""
  path-prefix: ""
  # Sort results by the order defined in `sort-order`.
  # Default: false
  sort-results: true
  # Order to use when sorting results.
  # Require `sort-results` to `true`.
  # Possible values: `file`, `linter`, and `severity`.
  #
  # If the severity values are inside the following list, they are ordered in this order:
  #   1. error
  #   2. warning
  #   3. high
  #   4. medium
  #   5. low
  # Either they are sorted alphabetically.
  #
  # Default: ["file"]
  sort-order:
    - linter
    - severity
    - file # filepath, line, and column.
  # Show statistics per linter.
  # Default: false
  show-stats: true
